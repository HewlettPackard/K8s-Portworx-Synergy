###
# (C) Copyright (2012-2017) Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
###
---
- hosts: master-1
  tasks:
  - name: copy required files to master-1
    copy:
      dest: /tmp/
      src: ./examples/cassandra/ 

  - name: create cassandra-headless-service 
    shell: kubectl apply -f /tmp/cassandra-headless-service.yml
  - pause: seconds=10

  - name: create px-storageclass
    shell: kubectl apply -f /tmp/px-storageclass.yml
  - pause: seconds=10

  - name: create cassandra-statefulset
    shell: kubectl apply -f /tmp/cassandra-statefulset.yml
  - pause: seconds=60

  - name: Verify that the PVC is bound to a volume using the storage class. 
    shell: kubectl get pvc
    register: get_pvc

  - name: printing output of "kubectl get pvc"
    debug: msg={{ get_pvc.stdout_lines }}

  - name: Verify that the cassandra cluster is created
    shell: kubectl exec cassandra-0 -- nodetool status
    register: get_cluster

  - name: printing output of "kubectl exec cassandra-0 -- nodetool status"
    debug: msg={{ get_cluster.sdtout_lines }}

  - name: Verify that the storageclass is created
    shell: kubectl get storageclass
    register: get_storageclass

  - name: printing output of "kubectl get storageclass"
    debug: msg={{ get_storageclass.stdout_lines }}
  
# If you have jq installed run this $ kubectl get pods -l app=cassandra -o json | jq '.items[] | {"name": .metadata.name,"hostname": .spec.nodeName, "hostIP": .status.hostIP, "PodIP": .status.podIP}'
  - name: get cassandra pods.
    shell: kubectl get pods -l "app=cassandra" -o wide
    register: get_pods

  - name: printing output of "kubectl get pods -l 'app=cassandra' -o wide"
    debug: msg={{ get_pods.stdout_lines }}
