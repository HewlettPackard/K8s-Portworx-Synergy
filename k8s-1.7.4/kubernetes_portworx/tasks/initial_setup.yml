###
# (C) Copyright (2012-2017) Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
###
---
- name: setup environment
  lineinfile:
    line: |
              export http_proxy=http://{{ http_proxy }}/
              export https_proxy=http://{{ http_proxy }}/
              export no_proxy={{ no_proxy }}
    dest: /etc/environment
  when: http_proxy is defined

- name: disable firewall
  service:
    name: firewalld
    state: stopped
    enabled: no

- name: disable selinux
  lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: 'SELINUX=permissive'

- name: enable ipv4 forwarding
  lineinfile:
    dest: /etc/sysctl.conf
    line: net.ipv4.ip_forward=1
    state: present

- name: configure iptables
  copy:
    content: |
              net.bridge.bridge-nf-call-iptables = 1
              net.bridge.bridge-nf-call-ip6tables = 1
    dest: /etc/sysctl.d/k8s.conf

- name: reboot nodes
  shell: sleep 2 && shutdown -r now "Ansible reboot"
  async: 1
  poll: 0
  ignore_errors: true

- name: wait for server to come back
  local_action: wait_for
  args:
      host: "{{ inventory_hostname }}"
      port: 22
      state: started
      delay: 10
      timeout: 1800

- pause: seconds=10

