###
# (C) Copyright (2012-2017) Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
###
---
- name: delete nodes from the cluster
  hosts: master-1
  vars_files:
  - vars/variables.yml
  tasks:
  - name: cordon nodes
    shell: kubectl cordon "{{ item }}"
    with_items: "{{ hostnames_list }}"

  - name: delete nodes
    shell: kubectl delete node  "{{ item }}"
    with_items: "{{ hostnames_list }}"

- name: remove portworx
  hosts: delete-nodes
  vars:
  tasks:
  - name: stop and disable portworx.service
    systemd:
      name: portworx.service
      state: stopped
      enabled: no

  - name: remove /etc/pwx
    shell: rm -rf /etc/pwx

  - name: remove /opt/pwx
    shell: rm -rf /opt/pwx
    ignore_errors: yes

# If you don't want to shutdown nodes comment the task below  
  - name: shutdown nodes
    shell: sleep 2 && shutdown now "Ansible shutdown"
    async: 1
    poll: 0
    ignore_errors: true

- name: update profiles
  hosts: localhost   
  connection: local
  vars_files:
  - vars/variables.yml
  tasks:
  - shell: python get_profiles.py "{{ config }}"
    register: profiles
  - debug: 
      msg: "{{ item.value }} will be updated"
    when: item.key in hostnames_list
    with_dict: "{{ profiles.stdout }}"

  - pause: minutes=1

  - name : "Update Server Profiles"
    delegate_to: localhost
    oneview_server_profile:
      config: "{{ config }}"
      state: "present"
      data:
        name: "{{ item.value }}"
        serialNumberType: Virtual
        iscsiInitiatorNameType: AutoGenerated
        macType: Virtual
        wwnType: Virtual
        affinity: Bay
        connections: []
        osDeploymentSettings: null
        bios:
           manageBios: false
           overriddenSettings: []
        hideUnusedFlexNics: true
        iscsiInitiatorName: ''
        localStorage:
           sasLogicalJBODs: []
           controllers: []
    when: item.key in hostnames_list
    with_dict: "{{ profiles.stdout }}"
