###
# (C) Copyright (2012-2017) Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
###
---
- hosts: master-1
  vars:
    etcd_ip: 10.21.47.20
    etcd_port: 2383
    #Provide interface name for portworx
    portworx_iface: ens3f1
    #Provide drives for portworx (comma,seperated)
    #portworx_drives: "-a -f"
    KUBERNETES_VERSION: 1.9.1
    
  tasks:
  - name: get px-spec.yaml
    shell: curl -o px-spec.yaml "http://install.portworx.com?cluster=hpe-server-2&kvdb=etcd://{{ etcd_ip }}:{{ etcd_port }}&miface={{ portworx_iface }}&diface={{ portworx_iface }}&k8sVersion=v{{ KUBERNETES_VERSION }}"
  - name: deploy portworx
    shell: kubectl apply -f px-spec.yaml
  - pause: minutes=2

#- hosts: worker-nodes
#  any_errors_fatal: true
#  tasks:
#  - name: install jq.
#    get_url:
#      url: https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64
#      dest: /usr/bin/jq
#      mode: "u+x"
#
#  - name: check portworx status
#    shell: /opt/pwx/bin/pxctl -j status | jq .status
#    register: result
#    until: result.stdout.find("STATUS_OK") != -1
#    retries: 15
#    delay: 30
#    ignore_errors: true
#
#  - debug: msg={{ result.stdout }}
